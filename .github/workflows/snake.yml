name: generate animation

on:
  # run automatically every 24 hours
  schedule:
    - cron: "0 16 * * *"

  # allows to manually run the job at any time
  workflow_dispatch:
    inputs:
      style:
        description: 'Color style to use (0-6 for Monday-Sunday, or leave empty for auto)'
        required: false
        type: choice
        options:
          - 'auto'
          - '0 - 海洋/深海 (Monday)'
          - '1 - 火焰/熔岩 (Tuesday)'
          - '2 - 森林/丛林 (Wednesday)'
          - '3 - 科技/赛博 (Thursday)'
          - '4 - 晨曦/琥珀 (Friday)'
          - '5 - 樱花/玫瑰 (Saturday)'
          - '6 - 暮色/咖啡 (Sunday)'
        default: 'auto'

  # run on every push on the master branch
  push:
    branches:
    - master

jobs:
  generate:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set color scheme by China weekday
        id: colors
        shell: python
        env:
          MANUAL_STYLE: ${{ github.event.inputs.style || 'auto' }}
          LIGHT_SCHEMAS: |
            [
              {"style":"海洋","snake":"#0277BD","dots":["#ebedf0","#81D4FA","#4FC3F7","#29B6F6","#039BE5"]},
              {"style":"火焰","snake":"#E64A19","dots":["#ebedf0","#FFAB91","#FF8A65","#FF7043","#FF5722"]},
              {"style":"森林","snake":"#28a745","dots":["#ebedf0","#9be9a8","#40c463","#30a14e","#216e39"]},
              {"style":"科技","snake":"#5E35B1","dots":["#ebedf0","#B39DDB","#9575CD","#7E57C2","#673AB7"]},
              {"style":"晨曦","snake":"#F57C00","dots":["#ebedf0","#FFD54F","#FFCA28","#FFA000","#FF8F00"]},
              {"style":"樱花","snake":"#D81B60","dots":["#ebedf0","#F48FB1","#F06292","#EC407A","#E91E63"]},
              {"style":"暮色","snake":"#5D4037","dots":["#ebedf0","#BCAAA4","#A1887F","#8D6E63","#6D4C41"]}
            ]
          DARK_SCHEMAS: |
            [
              {"style":"深海","snake":"#00BCD4","dots":["#151b23","#004D56","#006B75","#00897B","#26C6DA"]},
              {"style":"熔岩","snake":"#FF6E40","dots":["#151b23","#5D1F0C","#8D2F10","#D84315","#FF7043"]},
              {"style":"丛林","snake":"#3FB950","dots":["#151b23","#033A16","#196C2E","#2EA043","#56D364"]},
              {"style":"赛博","snake":"#7C4DFF","dots":["#151b23","#311B92","#4527A0","#5E35B1","#9575CD"]},
              {"style":"琥珀","snake":"#FFB74D","dots":["#151b23","#E65100","#F57C00","#FF9800","#FFCA28"]},
              {"style":"玫瑰","snake":"#F06292","dots":["#151b23","#4A1229","#880E4F","#C2185B","#EC407A"]},
              {"style":"咖啡","snake":"#8D6E63","dots":["#151b23","#321911","#4E342E","#6D4C41","#A1887F"]}
            ]
        run: |
          import os, json
          from datetime import datetime
          from zoneinfo import ZoneInfo

          # Check if manual style is selected
          manual_style = os.environ.get('MANUAL_STYLE', 'auto')

          if manual_style != 'auto':
              # Extract the index from the choice (e.g., "0 - 海洋/深海 (Monday)" -> 0)
              sun_idx = int(manual_style.split(' ')[0])
          else:
              # Use China timezone to determine the day (0=Monday, 6=Sunday)
              now_china = datetime.now(ZoneInfo('Asia/Shanghai'))
              sun_idx = now_china.weekday()  # 0=Monday, 6=Sunday

          light = json.loads(os.environ['LIGHT_SCHEMAS'])
          dark = json.loads(os.environ['DARK_SCHEMAS'])
          entry_light = light[sun_idx]
          entry_dark = dark[sun_idx]

          light_snake = entry_light['snake'].strip()
          dark_snake = entry_dark['snake'].strip()
          light_dots = ', '.join([d.strip() for d in entry_light['dots']])
          dark_dots = ', '.join([d.strip() for d in entry_dark['dots']])

          out = os.environ.get('GITHUB_OUTPUT')
          if out:
              with open(out, 'a') as f:
                  f.write(f"light_color={light_snake}\n")
                  f.write(f"dark_color={dark_snake}\n")
                  f.write(f"light_dots={light_dots}\n")
                  f.write(f"dark_dots={dark_dots}\n")

      - name: Generate GitHub Contributions Snake Animations
        uses: Platane/snk@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-snake-dark.svg?color_snake=${{ steps.colors.outputs.dark_color }}&color_dots=${{ steps.colors.outputs.dark_dots }}
            dist/github-snake.svg?color_snake=${{ steps.colors.outputs.light_color }}&color_dots=${{ steps.colors.outputs.light_dots }}

      # push the content of <build_dir> to a branch
      # the content will be available at https://raw.githubusercontent.com/<github_user>/<repository>/<target_branch>/<file> , or as github page
      - name: push github-snake.svg to the output branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: output
          commit_message: "Update snake animation [skip ci]"
